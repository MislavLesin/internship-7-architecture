// <auto-generated />
using System;
using DUMP7Architecture.Data.Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DUMP7Architecture.Data.Migrations
{
    [DbContext(typeof(ModelsDbContext))]
    [Migration("20210121142250_RemovedDescriptionFromProducts")]
    partial class RemovedDescriptionFromProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionInvoiceId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Home"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Kids"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Furniture"
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ante",
                            LastName = "Antić",
                            Oib = "123456111"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mate",
                            LastName = "Matic",
                            Oib = "123456112"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Karlo",
                            LastName = "Karlic",
                            Oib = "123456113"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Roko",
                            LastName = "Rokelic",
                            Oib = "123456114"
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkHoursStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("WorkShiftTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Employes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Mate",
                            LastName = "Matić",
                            Oib = "123456111",
                            WorkHoursStart = "8:00",
                            WorkShiftTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ivo",
                            LastName = "Ivic",
                            Oib = "123456112",
                            WorkHoursStart = "14:00",
                            WorkShiftTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Petar",
                            LastName = "Petricic",
                            Oib = "123456113",
                            WorkHoursStart = "8:00",
                            WorkShiftTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfPurchase = new DateTime(2020, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfPurchase = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateOfPurchase = new DateTime(2020, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfPurchase = new DateTime(2020, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfPurchase = new DateTime(2020, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 2
                        },
                        new
                        {
                            Id = 6,
                            DateOfPurchase = new DateTime(2020, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 3
                        },
                        new
                        {
                            Id = 7,
                            DateOfPurchase = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 1
                        },
                        new
                        {
                            Id = 8,
                            DateOfPurchase = new DateTime(2020, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 2
                        },
                        new
                        {
                            Id = 9,
                            DateOfPurchase = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 1
                        },
                        new
                        {
                            Id = 10,
                            DateOfPurchase = new DateTime(2020, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 1
                        },
                        new
                        {
                            Id = 11,
                            DateOfPurchase = new DateTime(2020, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 2
                        },
                        new
                        {
                            Id = 12,
                            DateOfPurchase = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 3
                        },
                        new
                        {
                            Id = 13,
                            DateOfPurchase = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 1
                        },
                        new
                        {
                            Id = 14,
                            DateOfPurchase = new DateTime(2020, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeId = 2
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("ProductsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phone Charger",
                            Price = 90m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 2,
                            Name = "Phone Case",
                            Price = 60m,
                            ProductType = 0,
                            ProductsInStock = 9
                        },
                        new
                        {
                            Id = 3,
                            Name = "Car Shampoo",
                            Price = 110m,
                            ProductType = 0,
                            ProductsInStock = 12
                        },
                        new
                        {
                            Id = 4,
                            Name = "Frisbee",
                            Price = 30m,
                            ProductType = 0,
                            ProductsInStock = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "Water Hose",
                            Price = 130m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bucket",
                            Price = 160m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Massage",
                            Price = 65m,
                            ProductType = 1,
                            ProductsInStock = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Car Detailing",
                            Price = 90m,
                            ProductType = 1,
                            ProductsInStock = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Flower Bowl",
                            Price = 40m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 10,
                            Name = "House Wifi Upgrade",
                            Price = 300m,
                            ProductType = 1,
                            ProductsInStock = 1
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 6,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            ProductId = 10
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfProducts")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ProductInvoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Kids frisbee",
                            InvoiceId = 1,
                            Name = "Frisbee",
                            NumberOfProducts = 2,
                            Price = 30m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Classic bowl",
                            InvoiceId = 2,
                            Name = "Flower Bowl",
                            NumberOfProducts = 1,
                            Price = 40m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "10m",
                            InvoiceId = 3,
                            Name = "Water Hose",
                            NumberOfProducts = 1,
                            Price = 130m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Silocone case Iphone 10x",
                            InvoiceId = 4,
                            Name = "Phone Case",
                            NumberOfProducts = 1,
                            Price = 60m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "10m",
                            InvoiceId = 5,
                            Name = "Water Hose",
                            NumberOfProducts = 1,
                            Price = 130m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "6L bucket Wooden",
                            InvoiceId = 5,
                            Name = "Bucket",
                            NumberOfProducts = 1,
                            Price = 160m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Vanilla car shampoo, 0.5l",
                            InvoiceId = 6,
                            Name = "Car Shampoo",
                            NumberOfProducts = 1,
                            Price = 110m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Silocone case Iphone 10x",
                            InvoiceId = 7,
                            Name = "Phone Case",
                            NumberOfProducts = 1,
                            Price = 60m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 9,
                            Description = "2 amp charger",
                            InvoiceId = 8,
                            Name = "Phone Charger",
                            NumberOfProducts = 1,
                            Price = 90m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 10,
                            Description = "Classic bowl",
                            InvoiceId = 9,
                            Name = "Flower Bowl",
                            NumberOfProducts = 1,
                            Price = 40m,
                            ProductType = 0
                        },
                        new
                        {
                            Id = 11,
                            Description = "Outside and inside",
                            InvoiceId = 10,
                            Name = "Car Detailing",
                            NumberOfProducts = 1,
                            Price = 90m,
                            ProductType = 1
                        },
                        new
                        {
                            Id = 12,
                            Description = "Professional installation on WiFi",
                            InvoiceId = 11,
                            Name = "House Wifi Upgrade",
                            NumberOfProducts = 1,
                            Price = 300m,
                            ProductType = 1
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductInvoiceId");

                    b.ToTable("ProductInvoiceCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 6,
                            ProductInvoiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            ProductInvoiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            ProductInvoiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            ProductInvoiceId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            ProductInvoiceId = 5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            ProductInvoiceId = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            ProductInvoiceId = 7
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            ProductInvoiceId = 8
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            ProductInvoiceId = 9
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            ProductInvoiceId = 10
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            ProductInvoiceId = 11
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            ProductInvoiceId = 12
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ServiceAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Professional database maintenance",
                            Name = "Database maintenance",
                            PricePerDay = 30m,
                            ServiceAvailable = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cleaning lady",
                            Name = "Home maintenance",
                            PricePerDay = 50m,
                            ServiceAvailable = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "Daily Brekfast and Lunch",
                            Name = "Personal Cheff",
                            PricePerDay = 200m,
                            ServiceAvailable = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Daily Brekfast, Lunch and Dinner",
                            Name = "Personal Cheff +",
                            PricePerDay = 350m,
                            ServiceAvailable = true
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            SubscriptionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            SubscriptionId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            SubscriptionId = 4
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("SubscriptionInvoices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Description = "Professional database maintenance",
                            InvoiceId = 12,
                            Name = "Database maintenance",
                            PricePerDay = 30m,
                            SubscriptionEndDate = new DateTime(2020, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscriptionStartDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Description = "Cleaning lady",
                            InvoiceId = 13,
                            Name = "Home maintenance",
                            PricePerDay = 50m,
                            SubscriptionEndDate = new DateTime(2020, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscriptionStartDate = new DateTime(2020, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Description = "Daily Brekfast, Lunch and Dinner",
                            InvoiceId = 14,
                            Name = "Personal Cheff +",
                            PricePerDay = 350m,
                            SubscriptionEndDate = new DateTime(2020, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubscriptionStartDate = new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoiceCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionInvoiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubscriptionInvoiceId");

                    b.ToTable("SubscriptionInvoiceCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            SubscriptionInvoiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            SubscriptionInvoiceId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            SubscriptionInvoiceId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            SubscriptionInvoiceId = 3
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Category", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", null)
                        .WithMany("ProductCategories")
                        .HasForeignKey("SubscriptionInvoiceId");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Employe", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductCategory", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Invoice", null)
                        .WithMany("ProductInvoices")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoiceCategory", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Category", "Category")
                        .WithMany("ProductInvoiceCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductInvoice", "ProductInvoice")
                        .WithMany("ProductInvoiceCategories")
                        .HasForeignKey("ProductInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductInvoice");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionCategory", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Category", "Category")
                        .WithMany("SubscriptionCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Subscription", "Subscription")
                        .WithMany("SubscriptionCategories")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Customer", "Customer")
                        .WithMany("SubscriptionInvoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Invoice", null)
                        .WithMany("SubscriptionInvoices")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoiceCategory", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Category", "Category")
                        .WithMany("SubscriptionInvoiceCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", "SubscriptionInvoice")
                        .WithMany()
                        .HasForeignKey("SubscriptionInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SubscriptionInvoice");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Category", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductInvoiceCategories");

                    b.Navigation("SubscriptionCategories");

                    b.Navigation("SubscriptionInvoiceCategories");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Customer", b =>
                {
                    b.Navigation("SubscriptionInvoices");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.Navigation("ProductInvoices");

                    b.Navigation("SubscriptionInvoices");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.Navigation("ProductInvoiceCategories");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Subscription", b =>
                {
                    b.Navigation("SubscriptionCategories");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
