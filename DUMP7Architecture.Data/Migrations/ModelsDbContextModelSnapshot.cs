// <auto-generated />
using System;
using DUMP7Architecture.Data.Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DUMP7Architecture.Data.Migrations
{
    [DbContext(typeof(ModelsDbContext))]
    partial class ModelsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Ante",
                            LastName = "Antić",
                            Oib = "123456111"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Mate",
                            LastName = "Matic",
                            Oib = "123456112"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Karlo",
                            LastName = "Karlic",
                            Oib = "123456113"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Roko",
                            LastName = "Rokelic",
                            Oib = "123456114"
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkHoursStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("WorkShiftTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Employes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Mate",
                            LastName = "Matić",
                            Oib = "123456111",
                            WorkHoursStart = "8:00",
                            WorkShiftTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ivo",
                            LastName = "Ivic",
                            Oib = "123456112",
                            WorkHoursStart = "14:00",
                            WorkShiftTime = new TimeSpan(0, 6, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Petar",
                            LastName = "Petricic",
                            Oib = "123456113",
                            WorkHoursStart = "8:00",
                            WorkShiftTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("ProductsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "2 amp charger",
                            Name = "Phone Charger",
                            Price = 90m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 2,
                            Description = "Silocone case Iphone 10x",
                            Name = "Phone Case",
                            Price = 60m,
                            ProductType = 0,
                            ProductsInStock = 9
                        },
                        new
                        {
                            Id = 3,
                            Description = "Vanilla car shampoo, 0.5l",
                            Name = "Car Shampoo",
                            Price = 110m,
                            ProductType = 0,
                            ProductsInStock = 12
                        },
                        new
                        {
                            Id = 4,
                            Description = "Kiss frisbee",
                            Name = "Frisbee",
                            Price = 30m,
                            ProductType = 0,
                            ProductsInStock = 5
                        },
                        new
                        {
                            Id = 5,
                            Description = "10m",
                            Name = "Water Hose",
                            Price = 130m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 6,
                            Description = "6L bucket Wooden",
                            Name = "Bucket",
                            Price = 160m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 7,
                            Description = "30 min",
                            Name = "Massage",
                            Price = 65m,
                            ProductType = 1,
                            ProductsInStock = 1
                        },
                        new
                        {
                            Id = 8,
                            Description = "Outside and inside",
                            Name = "Car Detailing",
                            Price = 90m,
                            ProductType = 1,
                            ProductsInStock = 1
                        },
                        new
                        {
                            Id = 9,
                            Description = "Claccis bowl",
                            Name = "Flower Bowl",
                            Price = 40m,
                            ProductType = 0,
                            ProductsInStock = 6
                        },
                        new
                        {
                            Id = 10,
                            Description = "Professional installation on WiFi",
                            Name = "House Wifi Upgrade",
                            Price = 300m,
                            ProductType = 1,
                            ProductsInStock = 1
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Car"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Home"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Kids"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Furniture"
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("ProductsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ProductInvoices");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ServiceAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Professional database maintenance",
                            Name = "Database maintenance",
                            PricePerDay = 30m,
                            ServiceAvailable = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cleaning lady",
                            Name = "Home maintenance",
                            PricePerDay = 50m,
                            ServiceAvailable = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "Daily Brekfast and Lunch",
                            Name = "Personal Cheff",
                            PricePerDay = 200m,
                            ServiceAvailable = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Daily Brekfast, Lunch and Dinner",
                            Name = "Personal Cheff +",
                            PricePerDay = 350m,
                            ServiceAvailable = true
                        });
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("SubscriptionInvoices");
                });

            modelBuilder.Entity("ProductCategoryProductInvoice", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SroductInvoicesId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "SroductInvoicesId");

                    b.HasIndex("SroductInvoicesId");

                    b.ToTable("ProductCategoryProductInvoice");
                });

            modelBuilder.Entity("ProductCategorySubscription", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionsId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "SubscriptionsId");

                    b.HasIndex("SubscriptionsId");

                    b.ToTable("ProductCategorySubscription");
                });

            modelBuilder.Entity("ProductCategorySubscriptionInvoice", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionInvoicesId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "SubscriptionInvoicesId");

                    b.HasIndex("SubscriptionInvoicesId");

                    b.ToTable("ProductCategorySubscriptionInvoice");
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductProductCategory");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Employe", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId");

                    b.Navigation("Customer");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Invoice", null)
                        .WithMany("ProductInvoices")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Invoice", null)
                        .WithMany("SubscriptionInvoices")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("ProductCategoryProductInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductInvoice", null)
                        .WithMany()
                        .HasForeignKey("SroductInvoicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductCategorySubscription", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Subscription", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductCategorySubscriptionInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionInvoicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.Navigation("ProductInvoices");

                    b.Navigation("SubscriptionInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
