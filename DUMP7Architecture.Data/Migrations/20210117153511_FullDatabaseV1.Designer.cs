// <auto-generated />
using System;
using DUMP7Architecture.Data.Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DUMP7Architecture.Data.Migrations
{
    [DbContext(typeof(ModelsDbContext))]
    [Migration("20210117153511_FullDatabaseV1")]
    partial class FullDatabaseV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Employe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Oib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WorkHoursStart")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WorkShiftTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("ProductsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("ProductsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ProductInvoices");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ServiceAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("SubscriptionInvoices");
                });

            modelBuilder.Entity("ProductCategoryProductInvoice", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SroductInvoicesId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "SroductInvoicesId");

                    b.HasIndex("SroductInvoicesId");

                    b.ToTable("ProductCategoryProductInvoice");
                });

            modelBuilder.Entity("ProductCategorySubscription", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionsId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "SubscriptionsId");

                    b.HasIndex("SubscriptionsId");

                    b.ToTable("ProductCategorySubscription");
                });

            modelBuilder.Entity("ProductCategorySubscriptionInvoice", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionInvoicesId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "SubscriptionInvoicesId");

                    b.HasIndex("SubscriptionInvoicesId");

                    b.ToTable("ProductCategorySubscriptionInvoice");
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.Property<int>("ProductCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("ProductCategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductProductCategory");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Employe", "Employe")
                        .WithMany()
                        .HasForeignKey("EmployeId");

                    b.Navigation("Customer");

                    b.Navigation("Employe");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.ProductInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Invoice", null)
                        .WithMany("ProductInvoices")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Invoice", null)
                        .WithMany("SubscriptionInvoices")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("ProductCategoryProductInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductInvoice", null)
                        .WithMany()
                        .HasForeignKey("SroductInvoicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductCategorySubscription", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Subscription", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductCategorySubscriptionInvoice", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.SubscriptionInvoice", null)
                        .WithMany()
                        .HasForeignKey("SubscriptionInvoicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.HasOne("DUMP7Architecture.Data.Entities.Models.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DUMP7Architecture.Data.Entities.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DUMP7Architecture.Data.Entities.Models.Invoice", b =>
                {
                    b.Navigation("ProductInvoices");

                    b.Navigation("SubscriptionInvoices");
                });
#pragma warning restore 612, 618
        }
    }
}
